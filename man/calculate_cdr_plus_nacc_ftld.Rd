% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_cdr_plus_nacc_ftld.R
\name{calculate_cdr_plus_nacc_ftld}
\alias{calculate_cdr_plus_nacc_ftld}
\title{Calculate Global CDR® plus NACC FTLD Rating}
\usage{
calculate_cdr_plus_nacc_ftld(
  .data,
  MEMORY = MEMORY,
  ORIENT = ORIENT,
  JUDGMENT = JUDGMENT,
  COMMUN = COMMUN,
  HOMEHOBB = HOMEHOBB,
  PERSCARE = PERSCARE,
  COMPORT = COMPORT,
  CDRLANG = CDRLANG
)
}
\arguments{
\item{.data}{dataframe object}

\item{MEMORY}{CDR memory score}

\item{ORIENT}{CDR orientation score}

\item{JUDGMENT}{CDR judgement score}

\item{COMMUN}{CDR community? score}

\item{HOMEHOBB}{CDR home acitivites and hobbies score}

\item{PERSCARE}{CDR personal care score}

\item{COMPORT}{CDR behavior score}

\item{CDRLANG}{CDR language score}
}
\value{
An object of the same type as \code{.data}. The output has the following properties:
\itemize{
\item Rows are not affected.
\item Data frame attributes are preserved.
\item Groups are maintained; you can't select off grouping variables.
\item The returned data frame includes a new variable labeled \code{cdr_plus_nacc_ftld}.
}
}
\description{
\code{calculate_cdr_plus_nacc_ftld()} calculates the global CDR® plus NACC FTLD score
as described by Miyagawa et al. (2020). The default arguments expect CDR variable names as defined by the NACC,
but custom variable names can be assigned to each of these arguments.
}
\section{Examples}{
\if{html}{\out{<div class="r">}}\preformatted{nacc_cdr_data_simulated \%>\%
   select(-NACCID,-VISITDATE) \%>\% # limit columns in final output for readability purposes
   calculate_cdr_plus_nacc_ftld()
}\if{html}{\out{</div>}}\preformatted{## # A tibble: 100 × 9
##    MEMORY ORIENT JUDGMENT COMMUN HOMEHOBB PERSCARE COMPORT CDRLANG cdr_plus_nacc_ftld
##     <dbl>  <dbl>    <dbl>  <dbl>    <dbl>    <dbl>   <dbl>   <dbl>              <dbl>
##  1      2    0.5      0.5    0        2        3       1       0.5                  2
##  2      0    0.5      0      0        0.5      0       3       0.5                  2
##  3      0    1        2      2        0        0.5     0       0.5                  2
##  4      1    0.5      1      0.5      0        1       0       2                    1
##  5      1    0.5      0      0        0        0       0       1                    1
##  6      0    0        0      0        0        0       0       0                    0
##  7      1    2        0      0.5      0        0       0.5     0                    1
##  8      1    1        0.5    0        0        0.5     2       0                    1
##  9      2    0.5      1      0        3        0.5     0.5     0.5                  2
## 10      1    1        0      0.5      0        1       0       0                    1
## # … with 90 more rows
}
}

